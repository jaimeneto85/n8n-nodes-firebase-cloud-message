# Task ID: 2
# Title: Implement Firebase Authentication Module
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Create a module to handle OAuth 2.0 authentication with Firebase using Service Account JSON key.
# Details:
1. Create a new file `src/credentials/FirebaseOAuth2Api.credentials.ts`
2. Implement the ICredentialType interface for Firebase OAuth2
3. Use the `google-auth-library` package for handling OAuth2 authentication
4. Implement methods for:
   - Initializing authentication with service account JSON
   - Generating and refreshing access tokens
   - Validating credentials
5. Example implementation:
```typescript
import { ICredentialType, INodeProperties } from 'n8n-workflow';
import { GoogleAuth } from 'google-auth-library';

export class FirebaseOAuth2Api implements ICredentialType {
  name = 'firebaseOAuth2Api';
  displayName = 'Firebase OAuth2 API';
  documentationUrl = 'https://firebase.google.com/docs/admin/setup';
  properties: INodeProperties[] = [
    {
      displayName: 'Service Account JSON',
      name: 'serviceAccountJson',
      type: 'string',
      typeOptions: { password: true },
      default: '',
      required: true,
      description: 'Enter the Service Account JSON key',
    },
  ];

  async authenticate(credentials: ICredentialDataDecryptedObject): Promise<any> {
    const serviceAccountJson = JSON.parse(credentials.serviceAccountJson as string);
    const auth = new GoogleAuth({
      credentials: serviceAccountJson,
      scopes: ['https://www.googleapis.com/auth/firebase.messaging'],
    });
    return auth.getClient();
  }
}
```

# Test Strategy:
1. Create unit tests for the FirebaseOAuth2Api class
2. Test successful authentication with valid service account JSON
3. Test error handling with invalid service account JSON
4. Verify token generation and refresh functionality
